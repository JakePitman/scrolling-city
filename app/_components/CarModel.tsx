/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 public/models/car/car.glb -o app/_components/CarModel.tsx 
*/

import * as THREE from "three";
import React from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Cube006: THREE.Mesh;
    Cube006_1: THREE.Mesh;
    Cube006_2: THREE.Mesh;
    Cube006_3: THREE.Mesh;
  };
  materials: {
    metal: THREE.MeshStandardMaterial;
    glass: THREE.MeshStandardMaterial;
    headlights: THREE.MeshStandardMaterial;
    taillights: THREE.MeshStandardMaterial;
  };
};

const taillightMaterial = new THREE.MeshStandardMaterial({
  color: "red",
  toneMapped: false,
  emissive: "red",
  emissiveIntensity: 2,
});

export function CarModel(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/models/car/car.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Cube006.geometry} material={materials.metal} />
      <mesh geometry={nodes.Cube006_1.geometry} material={materials.glass} />
      <mesh
        geometry={nodes.Cube006_2.geometry}
        material={materials.headlights}
      />
      <mesh material={taillightMaterial} position={[0.5, 0.5, 1.5]}>
        <planeGeometry args={[0.4, 0.3]} />
        <meshStandardMaterial
          color="red"
          emissive="red"
          emissiveIntensity={2}
          toneMapped={false}
        />
      </mesh>
      <mesh material={taillightMaterial} position={[-0.5, 0.5, 1.5]}>
        <planeGeometry args={[0.4, 0.3]} />
        <meshStandardMaterial
          color="red"
          emissive="red"
          emissiveIntensity={2}
          toneMapped={false}
        />
      </mesh>
    </group>
  );
}

useGLTF.preload("/car.glb");
